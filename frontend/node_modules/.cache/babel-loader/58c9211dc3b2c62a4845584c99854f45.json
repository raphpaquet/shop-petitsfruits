{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  localStorage.removeItem(\"shippingAddress\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      paylod: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/raphaellepaquet/lighthouse/shop-petitsfruits/frontend/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","register","name","signout","removeItem","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","paylod"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n} from \"../constants/userConstants\";\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/signin\", { email, password });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password,\n    });\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  localStorage.removeItem(\"shippingAddress\");\n  dispatch({ type: USER_SIGNOUT });\n};\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    dispatch({ type: USER_DETAILS_SUCCESS, paylod: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}